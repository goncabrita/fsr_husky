<?xml version="1.0"?>
<launch>

	<!-- Clearpath Husky Robot -->
	<include file="$(find husky_base)/launch/base.launch" />

	<!-- RTK GPS -->
	<node name="rtk_robot_node" pkg="rtk_ros" type="rtk_robot_node" >
		<param name="port" value="gps" />
	</node>

	<!-- XSens MTi-300 IMU -->
	<node name="xsens_mti_300" pkg="xsens_driver" type="mtnode.py" >
		<param name="device" value="/dev/mti_300" />
		<param name="baudrate" value="115200" />
	</node>

	<!-- PointGrey Flea3 GigE Cameras -->
	<!-- <group ns="stereo">
		<node name="left" pkg="pgr_gige_camera_driver" type="pgr_gige_camera_node">
			<param name="ip_address" value="192.168.4.11" />
			<param name="frame_id" value="left_camera" />
		</node>
		<node name="right" pkg="pgr_gige_camera_driver" type="pgr_gige_camera_node" >
			<param name="ip_address" value="192.168.4.12" />
			<param name="frame_id" value="right_camera" />
		</node>
	</group> -->

	<!-- Visual Odometry -->
	<!-- <node name="stereo_odometry" pkg="viso2_ros" type="stereo_odometer" >
		<param name="odom_frame_id" value="odom" />
	</node> -->

	<!-- Extended Kalman Filter -  Estimate the 3D pose of the robot -->
	<node pkg="robot_pose_ekf" type="robot_pose_ekf" name="robot_pose_ekf">
		<remap from="odom" to="encoder"/>
		<remap from="imu_data" to="imu/data"/>
    		<param name="output_frame" value="odom"/>
    		<param name="freq" value="30.0"/>
    		<param name="sensor_timeout" value="1.0"/>
    		<param name="odom_used" value="true"/>
    		<param name="imu_used" value="true"/>
    		<param name="vo_used" value="false"/>
    		<param name="debug" value="false"/>
    		<param name="self_diagnose" value="false"/>
  	</node>

	<!-- SICK LMS100 Laser Range Finder -->
	<node name="lms1xx_node" pkg="lms1xx_driver" type="lms1xx_node" >
		<param name="host" value="192.168.4.13" />
		<param name="frame_id" value="sick_lms100" />
	</node>

	<!-- PTU-D46 Pan and Tilt -->
	<node name="ptu_d46_node" pkg="ptu_d46_driver" type="ptu_d46_node" output="screen" >
		<param name="port" value="/dev/ptu_d46" />
	</node>

	<!-- Laser Assembler - Converts laser scans to a PointCloud2 message using the pan and tilt unit -->
  	<node type="laser_scan_assembler" pkg="laser_assembler" name="laser_scan_assembler" output="screen">
    		<param name="max_scans" type="int" value="100" />
    		<param name="fixed_frame" type="string" value="base_link" />
  	</node>

	<!-- FSR Husky URDF -->
	<param name="robot_description" command="$(find xacro)/xacro.py '$(find fsr_husky_description)/urdf/fsr_husky.urdf.xacro'" />
	<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
	<node name="joint_state_publisher" pkg="fsr_husky_bringup" type="joint_state_publisher" />

	<!--Sound Play -->
	<node name="sound_play" pkg="sound_play" type="soundplay_node.py" />

	<node pkg="joy" type="joy_node" name="joystick"/>

	<node pkg="fsr_husky_teleop" type="joystick_teleop_node" name="full_teleop" output="screen">
		<param name="multiplex" value="true"/>
		<param name="scale_angular" value="1.5"/>
		<param name="scale_linear" value="0.5"/>
		<param name="control_pan_and_tilt" value="true"/>
		<remap from="ptu_d46/cmd" to="cmd"/>
	</node>

</launch>