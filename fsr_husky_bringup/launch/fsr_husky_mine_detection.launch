<?xml version="1.0"?>
<launch>
  <arg name="use_cameras" default="false"/>
  
<!-- Clearpath Husky Robot -->
 <include file="$(find husky_base)/launch/base.launch" /> 
 
 <!-- XSens MTi-300 IMU -->
 <node name="xsens_mti_300" pkg="xsens_driver" type="mtnode.py" output="screen" >
   <param name="device" value="/dev/mti_300" />
   <param name="baudrate" value="115200" />
   <param name="frame_id" value="base_imu" />
 </node>
 
 <!-- PointGrey Flea3 GigE Cameras -->
 <group if="$(arg use_cameras)">
   <node name="left_camera" pkg="pgr_gige_camera_driver" type="pgr_gige_camera_node">
     <param name="ip_address" value="192.168.4.11" />
     <param name="frame_id" value="left_camera" />
   </node>
   <node name="right_camera" pkg="pgr_gige_camera_driver" type="pgr_gige_camera_node" >
     <param name="ip_address" value="192.168.4.12" />
     <param name="frame_id" value="right_camera" />
   </node>
 </group>
 

 <!-- dynamixel tilt --> 
    <node name="dynamixel_manager" pkg="dynamixel_controllers" type="controller_manager.py" output="screen">
        <rosparam>
            namespace: dxl_manager
            serial_ports:
                ptu_d46_port:
                    port_name: "/dev/tilt"
                    baud_rate: 1000000
                    min_motor_id: 1
                    max_motor_id: 25
                    update_rate: 100
        </rosparam>
    </node>
 
 <!-- Start tilt joint controller -->
 <rosparam file="$(find fsr_husky_driver)/settings/tilt.yaml" command="load"/>
 
 <node name="tilt_controller_spawner" pkg="dynamixel_controllers" type="controller_spawner.py"
       args="--manager=dxl_manager
       --port ptu_d46_port
       ptu_d46_tilt_controller"
       output="screen">
 </node>
  
 <!-- Start the Tilt Joint States Publisher -->
 <node name="tilt_joint_state_publisher" pkg="fsr_husky_description" type="tilt_joint_state_publisher" output="screen"> 
   <remap from="joint_states" to="/ptu_d46_controller/joint_states"/>
   <param name="joint_topic" value="/ptu_d46_tilt_controller/state" />
 </node>
  

 <!-- SICK LMS100 Laser Range Finder -->
 <node name="lms1xx_node" pkg="lms1xx_driver" type="lms1xx_node" output="screen">
   <param name="host" value="192.168.4.13" />
   <param name="frame_id" value="sick_lms100" />
 </node>

 <!-- Convert laser scan to pointclouds -->
 <node pkg="laser_filters" type="scan_to_cloud_filter_chain" output="screen" name="scan_to_cloud_filter_chain_tilt_laser">
   <remap from="scan" to="scan"/>
   <remap from="cloud_filtered" to="tilt_scan_cloud"/>
   <param name="target_frame" type="string" value="base_link"/>
   <param name="high_fidelity" value="true" />
   <!--<rosparam command="load" file="$(find fsr_husky_bringup)/settings/shadow_filter.yaml" /> -->
 </node>-->

<!-- assemble pointcloud -->
<include file="$(find fsr_husky_bringup)/launch/pointcloud_generator.launch"/>

<!-- filter pointcloud to remove grass and small plants -->
<node pkg="pcl_sandbox" type="pcl_sandbox" name="pcl_filter">
    <param name="min_neighbors" value="12"/>
    <param name="radius" value="0.10"/>
    <remap from="input" to="assembled_cloud"/>
    <remap from="output" to="cloud"/>
</node>

 
 <!-- Mine Detection Arm -->
 <node type="fsr_husky_arm_node" pkg="fsr_husky_driver" name="fsr_husky_arm" output="screen">
   <remap from="joint_states" to="/arm_controller/joint_states"/>
   <param name="linear_actuator_port" type="string" value="/dev/serial/by-id/usb-Pololu_Corporation_Pololu_Jrk_21v3_Motor_Controller_00076021-if00" />
   <param name="rotation_actuator_port" type="string" value="/dev/serial/by-id/usb-Pololu_Corporation_Pololu_Jrk_21v3_Motor_Controller_00076021-if02" />
   <param name="joint_state_rate" value="50.0" />
 </node>
 
 <!-- Metal Detector -->
 <node type="vallon_vmp3_node" pkg="vallon_vmp3_driver" name="metal_detector" output="screen">
   <param name="port" type="string" value="/dev/metal_detector" />
 </node>
 
 <!-- FSR Husky URDF -->
 <param name="robot_description" command="$(find xacro)/xacro.py '$(find fsr_husky_description)/urdf/fsr_husky_mine_detection.urdf.xacro'" />
 <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" >
   <param name="publish_frequency" value="100.0" />
 </node>
 <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
   <param name="rate" value="100.0" />
   <rosparam param="source_list">["/arm_controller/joint_states","/ptu_d46_controller/joint_states"]</rosparam>
 </node>
 
 <node pkg="joy" type="joy_node" name="joystick"/>
 
 <node pkg="fsr_husky_teleop" type="joystick_teleop_node" name="full_teleop" output="screen">
   <param name="multiplex" value="true"/>
   <param name="scale_angular" value="1.5"/>
   <param name="scale_linear" value="1.0"/>
   <param name="control_pan_and_tilt" value="false"/>
 </node>
 
 </launch>
 
