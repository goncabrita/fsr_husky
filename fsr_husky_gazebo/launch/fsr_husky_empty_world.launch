
<launch>

    <!-- Spawn the FSR Husky robot -->
    <include file="$(find fsr_husky_gazebo)/launch/fsr_husky_mine_detection.urdf.gazebo.launch"/>
    <!-- Open the Gazebo world -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch"/>
    
    
    <!-- Load the controllers for the pan and tilt unit -->
    <rosparam file="$(find fsr_husky_gazebo)/controllers/ptu_d46_control.yaml" command="load"/>

    <node name="ptu_d46_controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
      output="screen" ns="/ptu_d46" args="pan_position_controller tilt_position_controller joint_state_controller"/>

    <node name="ptu_d46_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
      respawn="false" output="screen">
      <remap from="/joint_states" to="/ptu_d46/joint_states" />
    </node>
    
    
    <!-- Load the controllers for the arm -->
    <rosparam file="$(find fsr_husky_gazebo)/controllers/arm_control.yaml" command="load"/>

    <node name="arm_controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
      output="screen" ns="/arm" args="upper_lift_controller lower_lift_controller mirror_lift_controller sweep_controller joint_state_controller"/>

    <node name="arm_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
      respawn="false" output="screen">
      <remap from="/joint_states" to="/arm/joint_states" />
    </node>
    
    <node pkg="fsr_husky_gazebo" type="arm_controller" name="arm_controller"/>
    
    
    <!-- EKF for localization -->
    <node pkg="robot_pose_ekf" type="robot_pose_ekf" name="robot_pose_ekf">
      <rosparam>
        freq: 10.0
        sensor_timeout: 1.0
        publish_tf: true
        odom_used: true
        vo_used: false
        output_frame: odom
      </rosparam>
    </node>
  
</launch>
